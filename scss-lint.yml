# linters description https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md
linters:

  # Reports when you use improper spacing around ! (the "bang") in !important and !default declarations
  BangFormat:
    enabled: true
    space_before_bang: true
    space_after_bang: false

  # Reports when a BEM selector contains more elements than a configurable maximum number
  BemDepth:
    enabled: true
    max_elements: 1

  # Prefer the terser border: 0 over border: none
  BorderZero:
    enabled: true
    convention: zero # or `none`

  # Prefer hexadecimal color codes over color keywords
  ColorKeyword:
    enabled: true

  # Prefer color literals (keywords or hexadecimal codes) to be used only in variable declarations. They should be referred to via variables everywhere else
  ColorVariable:
    enabled: true

  # Prefer // comments over /* ... */
  Comment:
    enabled: false

  # Reports @debug statements (which you probably left behind accidentally)
  DebugStatement:
    enabled: true

  # Rule sets should be ordered as follows: @extend declarations, @include declarations without inner @content, properties, @include declarations with inner @content, then nested rule sets
  DeclarationOrder:
    enabled: true

  # scss-lint:disable control comments should be preceded by a comment explaining why these linters are being disabled for this file
  DisableLinterReason:
    enabled: true

  # Reports when you define the same property twice in a single rule set
  DuplicateProperty:
    enabled: false

  # Place @else statements on the same line as the preceding curly brace
  ElsePlacement:
    enabled: true
    style: same_line # or 'new_line'

  # Separate rule, function, and mixin declarations with empty lines
  EmptyLineBetweenBlocks:
    enabled: true
    ignore_single_line_blocks: true

  # Reports when you have an empty rule set
  EmptyRule:
    enabled: false

  # Reports when you have an @extend directive
  ExtendDirective:
    enabled: false

  # Files should always have a final newline. This results in better diffs when adding lines to the file, since SCM systems such as git won't think that you touched the last line
  FinalNewline:
    enabled: false # .editorconfig do that
#    present: true

  # You can specify whether you prefer shorthand or long-form hexadecimal colors by setting the style option to short or long, respectively
  HexLength:
    enabled: false
#    style: short # or 'long'

  # Checks if hexadecimal colors are written in lowercase. You can specify which case with the style option
  HexNotation:
    enabled: true
    style: lowercase # or 'uppercase'

  # Ensure hexadecimal colors are valid (either three or six digits)
  HexValidation:
    enabled: true

  # Avoid using ID selectors
  IdSelector:
    enabled: true

  # Avoid using !important in properties. It is usually indicative of a misunderstanding of CSS specificity and can lead to brittle code
  ImportantRule:
    enabled: true

  # The basenames of @imported SCSS partials should not begin with an underscore and should not include the filename extension
  ImportPath:
    enabled: true
    leading_underscore: false
    filename_extension: false

  # Use two spaces per indentation level.
  Indentation:
    enabled: true
    allow_non_nested_indentation: false
    character: space # or 'tab'
    width: 4

  # Don't write leading zeros for numeric values with a decimal point
  LeadingZero:
    enabled: true
    style: exclude_zero # or 'include_zero'

  # Reports when you define the same selector twice in a single sheet
  MergeableSelector:
    enabled: false
#    force_nesting: true

  # Functions, mixins, variables, and placeholders should be declared with all lowercase letters and hyphens instead of underscores.
  NameFormat:
    enabled: true
    allow_leading_underscore: false
    convention: hyphenated_lowercase # or 'camel_case', or 'snake_case', or a regex pattern

  # Avoid nesting selectors too deeply
  NestingDepth:
    enabled: true
    max_depth: 6
    ignore_parent_selectors: true

  # Always use placeholder selectors in @extend
  PlaceholderInExtend:
    enabled: false

  # Limit the number of properties in a rule set
  PropertyCount:
    enabled: false
#    include_nested: false
#    max_properties: 10

  # Sort properties in a strict order. By default, will require properties be sorted in alphabetical order, as it's brain dead simple (highlight lines and execute :sort in vim), and it can benefit gzip compression
  PropertySortOrder:
    enabled: false
#    ignore_unspecified: false
#    min_properties: 2
#    separate_groups: false

  # Reports when you use an unknown CSS property (ignoring vendor-prefixed properties)
  PropertySpelling:
    enabled: true
    extra_properties: []

  # Configure which units are allowed for property values
  PropertyUnits:
    enabled: true
    global: [
      'ch', 'em', 'ex', 'rem',                 # Font-relative lengths
      'cm', 'in', 'mm', 'pc', 'pt', 'px', 'q', # Absolute lengths
      'vh', 'vw', 'vmin', 'vmax',              # Viewport-percentage lengths
      'deg', 'grad', 'rad', 'turn',            # Angle
      'ms', 's',                               # Duration
      'Hz', 'kHz',                             # Frequency
      'dpi', 'dpcm', 'dppx',                   # Resolution
      '%']                                     # Other
    properties: {}

  # Avoid qualifying elements in selectors (also known as "tag-qualifying")
  QualifyingElement:
    enabled: true
    allow_element_with_attribute: false
    allow_element_with_class: false
    allow_element_with_id: false

  # Don't write selectors with a depth of applicability greater than 3
  SelectorDepth:
    enabled: true
    max_depth: 3

  # It is good practice to choose a convention for naming selectors
  SelectorFormat:
    enabled: true
    convention: hyphenated_BEM # or 'strict_BEM', or 'hyphenated_lowercase', or 'snake_case', or 'camel_case', or a regex pattern

  # Prefer the shortest shorthand form possible for properties that support it
  Shorthand:
    enabled: false
    # allowed_shorthands: [1, 2, 3]

  # Properties within rule sets should each reside on their own line
  SingleLinePerProperty:
    enabled: true
    allow_single_line_rule_sets: true

  # Split selectors onto separate lines after each comma, and have each individual selector occupy a single line
  SingleLinePerSelector:
    enabled: true

  # Commas in lists should be followed by a space
  SpaceAfterComma:
    enabled: true
    style: one_space # or 'no_space', or 'at_least_one_space'

  # Properties should be formatted with a single space separating the colon from the property's value
  SpaceAfterPropertyColon:
    enabled: true
    style: one_space # or 'no_space', or 'at_least_one_space', or 'aligned'

  # Properties should be formatted with no space between the name and the colon
  SpaceAfterPropertyName:
    enabled: true

  # Variables should be formatted with no space between the name and the colon
  SpaceAfterVariableName:
    enabled: true

  # Operators should be formatted with a single space on both sides of an infix operator. These include +, -, *, /, %, ==, !=, >, >=, <, and <=
  SpaceAroundOperator:
    enabled: true
    style: one_space # or 'no_space'

  # Opening braces should be preceded by a single space
  SpaceBeforeBrace:
    enabled: true
    style: space # or 'new_line'
    allow_single_line_padding: false

  # Parentheses should not be padded with spaces
  SpaceBetweenParens:
    enabled: true
    spaces: 0

  # String literals should be written with single quotes unless using double quotes would save on escape characters
  StringQuotes:
    enabled: true
    style: single_quotes # or double_quotes

  # Property values; @extend, @include, and @import directives; and variable declarations should always end with a semicolon
  TrailingSemicolon:
    enabled: true

  # Reports lines containing trailing whitespace
  TrailingWhitespace:
    enabled: true

  # Don't write trailing zeros for numeric values with a decimal point
  TrailingZero:
    enabled: true

  # Don't use the all keyword to specify transition properties
  TransitionAll:
    enabled: false

  # Numeric values should not contain unnecessary fractional portions
  UnnecessaryMantissa:
    enabled: true

  # Do not use parent selector references (&) when they would otherwise be unnecessary
  UnnecessaryParentReference:
    enabled: true

  # URLs should not contain protocols or domain names
  UrlFormat:
    enabled: true

  # URLs should always be enclosed within quotes
  UrlQuotes:
    enabled: true

  # Properties, like color and font, are easier to read and maintain when defined using variables rather than literals
  VariableForProperty:
    enabled: true
    properties: [color, font]

  # Avoid vendor prefixes. That is, don't write them yourself
  VendorPrefix:
    enabled: true
    identifier_list: base
    additional_identifiers: []
    excluded_identifiers: []

  # Omit length units on zero values
  ZeroUnit:
    enabled: true

  Compass::*:
    enabled: false
